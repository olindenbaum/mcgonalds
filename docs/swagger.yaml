basePath: /api/v1
definitions:
  model.AdditionalFile:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      path:
        type: string
      type:
        description: e.g., "modpack", "config", etc.
        type: string
      updated_at:
        type: string
    type: object
  model.CreateServerRequest:
    properties:
      executable_command:
        type: string
      jar_file_id:
        description: ID of the JAR file
        type: integer
      mod_pack_id:
        description: Optional ID of the mod pack
        type: integer
      name:
        type: string
      path:
        type: string
    required:
    - executable_command
    - jar_file_id
    - name
    - path
    type: object
  model.ErrorResponse:
    properties:
      error:
        example: Invalid input data
        type: string
      message:
        example: Bad Request
        type: string
      status:
        example: 400
        type: integer
    type: object
  model.JarFile:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      is_common:
        type: boolean
      name:
        type: string
      path:
        type: string
      updated_at:
        type: string
      version:
        type: string
    type: object
  model.ModPack:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      is_common:
        type: boolean
      name:
        type: string
      path:
        type: string
      updated_at:
        type: string
      version:
        type: string
    type: object
  model.Server:
    properties:
      additional_file_ids:
        items:
          type: integer
        type: array
      additional_files:
        items:
          $ref: '#/definitions/model.AdditionalFile'
        type: array
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      jar_file:
        $ref: '#/definitions/model.JarFile'
      jar_file_id:
        type: integer
      name:
        type: string
      path:
        type: string
      server_config:
        $ref: '#/definitions/model.ServerConfig'
      updated_at:
        type: string
    type: object
  model.ServerConfig:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      executable_command:
        type: string
      id:
        type: integer
      jar_file:
        $ref: '#/definitions/model.JarFile'
      jar_file_id:
        type: integer
      mod_pack:
        $ref: '#/definitions/model.ModPack'
      mod_pack_id:
        type: integer
      server_id:
        type: integer
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a Minecraft server management service API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Minecraft Server Manager API
  version: "1.0"
paths:
  /jar-files:
    post:
      consumes:
      - multipart/form-data
      description: Upload a shared JAR file to be used by multiple servers
      parameters:
      - description: Name of the JAR file
        in: formData
        name: name
        required: true
        type: string
      - description: Version of the JAR file
        in: formData
        name: version
        required: true
        type: string
      - description: The JAR file to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.JarFile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Upload a shared JAR file
      tags:
      - jar-files
  /mod-packs:
    post:
      consumes:
      - multipart/form-data
      description: Upload a shared mod pack to be used by multiple servers
      parameters:
      - description: Name of the mod pack
        in: formData
        name: name
        required: true
        type: string
      - description: Version of the mod pack
        in: formData
        name: version
        required: true
        type: string
      - description: Type of the mod pack (e.g., zip, folder)
        in: formData
        name: type
        required: true
        type: string
      - description: The mod pack file to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.ModPack'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Upload a shared mod pack
      tags:
      - mod-packs
  /servers:
    get:
      description: Get a list of all Minecraft servers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Server'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: List all Minecraft servers
      tags:
      - servers
    post:
      consumes:
      - application/json
      description: Create a new Minecraft server with specified jar file and additional
        files
      parameters:
      - description: Server creation request
        in: body
        name: server
        required: true
        schema:
          $ref: '#/definitions/model.CreateServerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Server'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Create a new Minecraft server
      tags:
      - servers
  /servers/{name}:
    delete:
      description: Delete a specific Minecraft server by name
      parameters:
      - description: Server Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Delete a Minecraft server
      tags:
      - servers
    get:
      description: Get details of a specific Minecraft server by name
      parameters:
      - description: Server Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Server'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get a specific Minecraft server
      tags:
      - servers
  /servers/{name}/command:
    post:
      consumes:
      - application/json
      description: Send a command to a specific Minecraft server by name
      parameters:
      - description: Server Name
        in: path
        name: name
        required: true
        type: string
      - description: Command to send
        in: body
        name: command
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Send a command to a Minecraft server
      tags:
      - servers
  /servers/{name}/restart:
    post:
      description: Restart a specific Minecraft server by name
      parameters:
      - description: Server Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Restart a Minecraft server
      tags:
      - servers
  /servers/{name}/start:
    post:
      description: Start a specific Minecraft server by name
      parameters:
      - description: Server Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Start a Minecraft server
      tags:
      - servers
  /servers/{name}/stop:
    post:
      description: Stop a specific Minecraft server by name
      parameters:
      - description: Server Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Stop a Minecraft server
      tags:
      - servers
  /servers/{name}/upload-jar:
    post:
      consumes:
      - multipart/form-data
      description: Upload a JAR file to a specific server, either selecting a common
        JAR or uploading a new one
      parameters:
      - description: Server Name
        in: path
        name: name
        required: true
        type: string
      - description: JAR file to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: JAR file uploaded successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Upload JAR file for a server
      tags:
      - servers
  /servers/{name}/upload-modpack:
    post:
      consumes:
      - multipart/form-data
      description: Upload a mod pack to a specific server, either selecting a common
        mod pack or uploading a new one
      parameters:
      - description: Server Name
        in: path
        name: name
        required: true
        type: string
      - description: Mod pack file to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Mod pack uploaded successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Upload mod pack for a server
      tags:
      - servers
swagger: "2.0"
